# Test if HTTP compression (RFC 2616 + SDCH) is enabled for a given URL.
# Send a fake UA string for sites that sniff it instead of using the Accept-Encoding header. (Looking at you, ajax.googleapis.com!)
function httpcompression() {
  encoding="$(curl -LIs -H 'User-Agent: Mozilla/5 Gecko' -H 'Accept-Encoding: gzip,deflate,compress,sdch' "$1" | grep '^Content-Encoding:')" && echo "$1 is encoded using ${encoding#* }" || echo "$1 is not using any encoding"
}

function json() {
  curl "$*" | python -mjson.tool | pygmentize -l javascript
}

# All the dig info
function digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

# git functions
# most pulled from https://github.com/ignu/dotfiles2.0

function gc() {
  git commit -v -a -m "$*"
}

function gd() {
  git difftool $1 -t opendiff -y
}

function gbtr() {
  git branch --track $2 remotes/$1/$2
  git checkout $2
  git rebase master
  git checkout master
  git rebase $2
  git branch -D $2
}

function gbt() {
  git branch --track $2 remotes/$1/$2
  git checkout $2
}

function makegif() {
  # include trailing slash
  screenshot_dir=~/Desktop/
  latest_movie=$screenshot_dir`ls -tp "$screenshot_dir" | grep '.*\.mov' | head -n 1`
  gif_destination=`echo "$latest_movie" | sed 's/.mov/.gif/'`

  # brew install ffmpeg gifsicle
  ffmpeg -i "$latest_movie" -r 10 -f gif - | gifsicle > "$gif_destination"

  echo $gif_destination
  open -a "Google Chrome" "$gif_destination"
}
